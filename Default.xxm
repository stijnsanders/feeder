[[@DataLank,xxmSession,fCommon,Variants]][[!var
qr:TQueryResult;
xx:array of Variant;
s,sql0,sql1,sql2,sql2b,sql3,sqlPostID,sqlPubDate,cat:string;
d,d0,f,l,id,id0,lx,qrTimeout:integer;
d1:TDateTime;
loadMore,cList:boolean;
const
descasc:array[boolean] of string=('desc','asc');
lessthan:array[boolean] of string=('<','>');

procedure CheckCList;
begin
  if not cList then
   begin
    Context.SendHTML('<div style="padding-bottom:2pt;">');
    Context.SendHTML('<div class="date">');
    Context.Send(FormatDateTime('ddd yyyy-mm-dd hh:nn',UtcNow+Session.TimeBias));
    Context.SendHTML('</div>'#13#10);
    cList:=true;
   end;
end;

]][[
if Session.UserID=0 then
 begin
  Context.Include('dHead.xxmi');
  <<h1 style="background-color:gold;">&nbsp;feeder</h1>
  <h2>a simple feed reader the way I like it</h2>
  <h3>and I hope you do too</h3>
  <p>To authenticate, please login or register with <i>tx</i>:</p>
  <p><a href="/tx/Auth.xxm[[?'app','feeder','key',Session.Key]]" style="font-size:2em;font-weight:bold;font-style:italic;">tx...</a></p>
  <p>More about feeder: <a href="https://github.com/stijnsanders/feeder">GitHub...</a></p>
  <div style="border-bottom:4px solid gold;"></div>>
  loadMore:=false;
 end
else
 begin
  loadMore:=Context['x'].Value<>'';
  qrTimeout:=30;//default, see below

  cat:=Context['c'].Value;
  f:=Context['f'].AsInteger;

  if not loadMore then
   begin

    Context.Include('dHead.xxmi');

    <<div style="z-index:5;position:fixed;top:0;right:1.2em;background-color:gold;padding:4pt;user-select:none;">
    [[
    if Context.ContextString(csQueryString)<>'' then
     begin
      <<a href="." style="font-weight:bold;"><img src="img_l.png" width="16" height="16" alt="All"/>&nbsp;All</a><br />>
     end;
    ]]
    <span id="postcount" onclick="document.location.reload(false);">>
    qr:=TQueryResult.Create(Session.Connection,'select count(*) from "UserPost" where user_id=$1',[Session.UserID]);
    try
      Context.Send(qr.GetInt(0));
    finally
      qr.Free;
    end;
    <</span>
    &nbsp;<a href="Feeds.xxm"><img src="img_c.png" width="16" height="16" border="0" alt="Feeds..." /></a>
    </div>

    [[
    if Context['nowrap'].AsInteger<>0 then
     begin
      <<style type="text/css">
      DIV.post{white-space:nowrap;}
      DIV.postread{white-space:nowrap;}
      </style>>
     end;
    ]]
    <script src="feeder.js?r=101"></script>
    <div id="black" style="z-index:6;position:fixed;display:none;top:0;left:0;width:100vw;height:100vh;background-color:black;filter:opacity(0.5);user-select:none;" onclick="return doClose();"></div>
    <div id="postbox" class="postbox" style="z-index:8;position:fixed;display:none;top:0.5em;right:1em;user-select:none;">
      <a href="#" onclick="return doExpress();"><img src="img_e.png" width="16" height="16" alt="express" /></a>
      &nbsp;
      <a href="#" onclick="return doHere();"><img src="img_d.png" width="16" height="16" alt="load here" /></a>
      &nbsp;
      <a href="#" id="postlink" target="_blank" rel="noreferrer" onclick="doClose();"><img src="img_u.png" width="16" height="16" alt="load new tab" /></a>
      &nbsp;
      <a href="#" id="nextlink" rel="noreferrer" onclick="return doNext();"><img src="img_r.png" width="16" height="16" alt="load next post" /></a>
      &nbsp;
      <a href="#" onclick="return doClose();" style="width:4em;"><img src="img_x.png" width="16" height="16" alt="close post view" /></a>
    </div>
    <iframe id="postview" name="postview" style="z-index:7;position:fixed;display:none;left:1em;top:2em;background-color:#DDDDDD;border:1px solid black;" onload="doPostLoad();" src="about:blank"></iframe>
    <script>
    window.open("about:blank","postview");
    document.body.onscroll=doScroll;
    window.onbeforeunload=function(){window.scrollTo(0,0);}
    </script>>

   end;

  sql0:='select S.label, S.color, S.readwidth, P.id, P.title, P.pubdate, P.url, X.id as ReadID';
  sql1:=' from "UserPost" X left outer join "Post" P on P.id=X.post_id';
  sql2:=' left outer join "Subscription" S on S.id=X.subscription_id';
  sql2b:='';
  sql3:=' where X.user_id=$1';
  sqlPostID:='X.post_id';
  sqlPubDate:='X.pubdate';
  if loadMore then lx:=2 else lx:=0;
  SetLength(xx,1+lx);

  if Context['hl'].Value<>'' then
    sql2b:=' inner join "HotListSubscription" HLS on HLS.hotlist_id='+IntToStr(Context['hl'].AsInteger)+' and HLS.subscription_id=S.id';

  if cat='' then
    if f=0 then
      if (Context['search'].Value='') and (Context['title'].Value='') then
        if (Context['d'].Value='') and (Context['h'].Value='') then
         begin

          //show category links
          if not loadMore then
           begin
            cList:=false;
            Context.Flush;
            qr:=TQueryResult.Create(Session.Connection,
              'select distinct S.Category from "Subscription" S where S.user_id=$1 and S.Category<>'''' order by 1',[Session.UserID]);
            try
              if not qr.EOF then
               begin
                CheckCList;
                while qr.Read do
                 begin
                  s:=qr.GetStr(0);
                  <<div class="catlink"><a href="?c=[[=s]]">>=s<</a></div>
                  [[
                 end;
               end;
            finally
              qr.Free;
            end;
            qr:=TQueryResult.Create(Session.Connection,
              'select H.* from "HotList" H where H.user_id=$1 order by lower(H.label)',[Session.UserID]);
            try
              if not qr.EOF then
               begin
                CheckCList;
                while qr.Read do
                 begin
                  <<a href="?hl=[[.id]]" style="text-decoration:none;color:black;">>#ShowLabel(qr.GetStr('label'),qr.GetStr('color'),'')<</a>
                  [[
                 end;
               end;
            finally
              qr.Free;
            end;
            if cList then 
             begin
              Context.SendHTML('</div>'#13#10);
              Context.Flush;
             end;
           end;

          //query: no extra criteria
          SetLength(xx,2+lx);
          xx[1]:=Session.UserID;
         end
        else
        if Context['d'].Value='' then
         begin
          sql3:=sql3+' and floor((X.pubdate+$2)*24)::int%24=$3';
          SetLength(xx,3+lx);
          xx[1]:=double(Session.TimeBias);
          xx[2]:=Context['h'].AsInteger;
         end
        else
         begin
          sql3:=sql3+' and X.pubdate>$2 and X.pubdate<$3';
          SetLength(xx,3+lx);
          d1:=UtcNow-Context['d'].AsInteger;
          xx[1]:=double(VarFromDateTime(d1-4.0/24.0));
          xx[2]:=double(VarFromDateTime(d1+4.0/24.0));
         end
      else
       begin
        sql1:=' from "Post" P left outer join "UserPost" X on X.post_id=P.id and X.user_id=$1';
        sql2:=' left outer join "Subscription" S on S.feed_id=P.feed_id and S.user_id=$1';
        sqlPostID:='P.id';
        sqlPubDate:='P.pubdate';
        SetLength(xx,2+lx);
        if Context['title'].Value='' then
         begin
          sql3:=' where P.title||'' ''||P.content ilike $2';
          xx[1]:='%'+StringReplace(Context['search'].Value,' ','%',[rfReplaceAll])+'%';
         end
        else
         begin
          sql3:=' where P.title ilike $2';
          xx[1]:='%'+StringReplace(Context['title'].Value,' ','%',[rfReplaceAll])+'%';
         end;
       end
    else
     begin
      sql1:=' from "Post" P left outer join "UserPost" X on X.post_id=P.id and X.user_id=$1';
      sql2:=' left outer join "Subscription" S on S.feed_id=P.feed_id and S.user_id=$1';
      sql3:=' where P.feed_id=$2';
      sqlPostID:='P.id';
      sqlPubDate:='P.pubdate';
      SetLength(xx,2+lx);
      xx[1]:=f;
      if Context['search'].Value<>'' then
       begin
        sql3:=sql3
          +' and P.title||'' ''||P.content ilike $3';
        SetLength(xx,3+lx);
        xx[2]:='%'+StringReplace(Context['search'].Value,' ','%',[rfReplaceAll])+'%';
        qrTimeout:=300;
       end
      else
      if Context['title'].Value<>'' then
       begin
        sql3:=sql3
          +' and P.title ilike $3';
        SetLength(xx,3+lx);
        xx[2]:='%'+StringReplace(Context['title'].Value,' ','%',[rfReplaceAll])+'%';
       end;
     end
  else 
    if (Context['search'].Value='') and (Context['title'].Value='') then
     begin
      sql3:=sql3+' and S.category=$2';
      SetLength(xx,2+lx);
      xx[1]:=cat;
     end
    else
     begin
      sql1:=' from "Post" P inner join "Subscription" S on S.feed_id=P.feed_id and S.user_id=$1';
      sql2:=' left outer join "UserPost" X on X.post_id=P.id and X.user_id=$1';
      sql3:=' where S.category=$2';
      sqlPostID:='P.id';
      sqlPubDate:='P.pubdate';
      SetLength(xx,2+lx);
      xx[1]:=cat;  
      if Context['search'].Value<>'' then
       begin
        sql3:=sql3
          +' and P.title||'' ''||P.content ilike $3';
        SetLength(xx,3+lx);
        xx[2]:='%'+StringReplace(Context['search'].Value,' ','%',[rfReplaceAll])+'%';
        qrTimeout:=300;
       end
      else
      if Context['title'].Value<>'' then
       begin
        sql3:=sql3
          +' and P.title ilike $3';
        SetLength(xx,3+lx);
        xx[2]:='%'+StringReplace(Context['title'].Value,' ','%',[rfReplaceAll])+'%';
       end;
     end;

  if Context['q'].Value='' then l:=0 else l:=Context['q'].AsInteger;
  if l=0 then l:=Session.DefaultBatchSize;//default

  xx[0]:=Session.UserID;
  if loadMore then
   begin
    id0:=Context['x'].AsInteger;
    Session.Connection.Execute('set statement_timeout=90000',[]);
    qr:=TQueryResult.Create(Session.Connection,'select pubdate from "Post" where id=$1',[id0]);
    try
      d1:=double(qr[0]);
    finally
      qr.Free;
    end;
    d:=Trunc(d1+Session.TimeBias);
    sql3:=sql3+' and (('+sqlPubDate+'=$'+IntToStr(Length(xx)-1)+' and '+sqlPostID+'>$'+IntToStr(Length(xx))+
      ') or ('+sqlPubDate+lessthan[Context['a'].AsInteger<>0]+'$'+IntToStr(Length(xx)-1)+'))';
    xx[Length(xx)-2]:=double(d1);
    xx[Length(xx)-1]:=id0;
   end
  else
   begin
    d:=Trunc(UtcNow+Session.TimeBias);
    Context.Flush;
    Session.Connection.Execute('set statement_timeout='+IntToStr(qrTimeout)+'000',[]);
   end;


  if false then begin
  <<p style="border:2px solid red;">>=sql0+sql1+sql2+sql3+' order by '+sqlPubDate+' '+descasc[Context['a'].AsInteger<>0]+', '+sqlPostID+' limit '+IntToStr(l)<</p>>
  end;

  qr:=TQueryResult.Create(Session.Connection,
    sql0+sql1+sql2+sql2b+sql3+' order by '+sqlPubDate+' '+descasc[Context['a'].AsInteger<>0]+', '+sqlPostID+' limit '+IntToStr(l),xx);
  try
    if qr.EOF then
     begin
      if loadMore then Context.SendHTML('-') else
       begin
        FreeAndNil(qr);
        qr:=TQueryResult.Create(Session.Connection,'select S.id from "Subscription" S where S.user_id=$1 limit 1',[Session.UserID]);
        if qr.EOF then
         begin
          d1:=Now;//UtcNow?
          <<div class="post" id="p0">
          <div class="date" title="[[=FormatDateTime('ddd yyyy-mm-dd hh:nn:ss',d1)]]">>=FormatDateTime('hh:nn',d1)<</div>
          <div class="label" title="feeder: system message" style="background-color:#FFCC00;color:#000000;border:1px solid #000000;border-radius:0;">feeder</div>
          <a href="welcome.html" postqs="?id=0" onclick="return doPost(this,event);">Welcome! (click here)</a>
          </div>>
         end
        else
         begin
          <<div class="date">no posts found</div>>
         end;
       end;
     end
    else
     begin
      id:=0;
      while qr.Read do
       begin
        id:=qr.GetInt('id');
        d1:=double(qr['pubdate'])+Session.TimeBias;
        d0:=Trunc(d1);
        if d0<>d then
         begin
          <<div>
          <div class="date">>=FormatDateTime('ddd yyyy-mm-dd',d1)<</div>
          </div>>
          d:=d0;
         end;
        <<div class="post[[if qr.IsNull('ReadID') then Context.SendHTML('read');]]" id="p[[=qr['id']]]">
        <div class="date" title="[[=FormatDateTime('ddd yyyy-mm-dd hh:nn:ss',d1)]]">>=FormatDateTime('hh:nn',d1)<</div>
        [[#ShowLabel(qr.GetStr('label'),qr.GetStr('color'),'')]]
        <a href="[[=qr['url']]]" postqs="[[?'id',qr['id']]]" onclick="return doPost(this,event);">>#qr['title']<</a>
        </div>>
      end;

      if loadMore then
        Context.SendHTML(';'+IntToStr(id))
      else
       begin
        <<div id="trailer" style="height:100vh;border-bottom:4px solid gold;" x="[[=id]]"></div>>
       end;
     end;
  finally
    qr.Free;
  end;

 end;

if not loadMore then
  Context.Include('dFoot.xxmi');
