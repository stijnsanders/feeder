[[@xxmSession,DataLank,fCommon,Variants]][[!var
qr:TQueryResult;
category,feedlabel,readwidth,feedcolor,c,c1:string;
autounread:Variant;
id,feedid,ur0,ur1:integer;
const
osel:array[boolean] of string=('',' selected="1"');
]][[
if Session.UserID=0 then Context.Redirect('.',true);
Context.Include('dHead.xxmi');

id:=Context['id'].AsInteger;
if id=0 then
 begin

  <<div style="position:fixed;top:0;left:0em;background-color:gold;padding:4pt;user-select:none;">
  <a href="."><img src="img_l.png" width="16" height="16" border="0" alt="Back" /></a>
  &nbsp;
  <b>Feeds</b>:
  &nbsp;<a href="New.xxm">Add</a>
  &nbsp;<a href="OPML.xxm">OPML</a>
  &nbsp;<a href="Opinions.xxm">Opinions</a>
  &nbsp;<a href="Config.xxm"><img src="img_c.png" width="16" height="16" border="0" alt="Settings..." /> Settings</a>
  &nbsp;
  |
  &nbsp;<a href="Logoff.xxm">Logoff</a>
  </div>

  <div style="height:1.5em;padding-bottom:2pt;">&nbsp;</div>>

  qr:=TQueryResult.Create(Session.Connection,
    'select S.*, F.name, F.url, F.itemcount, F.regime'+
    //', (select count(*) from "Post" P where P.feed_id=F.id) as PostCount'+
    //', (select count(*) from "UserPost" X inner join "Post" P on P.id=X.post_id where P.feed_id=F.id and X.user_id=S.user_id) as UnreadCount'+
    ' from "Subscription" S'+
    ' inner join "Feed" F on F.id=S.feed_id'+
    ' where S.user_id=$1'+
    //' order by S.category, S.label, F.name, S.id',[Session.UserID]);
    ' order by lower(S.category), lower(S.label), lower(F.name), S.id',[Session.UserID]);
  try
    c:='';
    while qr.Read do
     begin
      c1:=qr.GetStr('category');
      if c<>c1 then
       begin
        <<div>
        <div class="catlink"><a>>=c1<</a></div>
        </div>>
        c:=c1;
       end;
      <<div class="post">
      <div class="date">>=FormatDateTime('yyyy-mm-dd',double(qr['created'])+Session.TimeBias)<</div>
      [[#ShowLabel(qr.GetStr('label'),qr.GetStr('color'),'')]]
      <a href="?id=[[.id]]">"[[.name]]"</a>
      <a href=".?f=[[.feed_id]]" id="pc[[.id]]" style="color:#0000CC;">...</a>
      [[
      if not(qr.IsNull('itemcount')) and (qr.GetInt('itemcount')=0) then
       begin
        <<span style="color:#CC0000;">Error reading feed </span>>
       end;
      if qr.GetInt('regime')>20 then
       begin
        <<span style="color:#660000;" title="Feed reading on a regime of once every [[.regime]] days">Stale? </span>>
       end;
      ]]
      <span style="color:#CCCCCC;">>.url<</span>
      </div>>
     end;
  finally
    qr.Free;
  end;

  <<div id="trailer" style="height:100vh;border-bottom:4px solid gold;"></div>>

  Context.Flush;
  Session.Connection.Execute('set statement_timeout=10000',[]);
  qr:=TQueryResult.Create(Session.Connection,

    'select S.id, S.postsopened, F.totalcount as PostCount, X.UnreadCount'+
    ' from "Subscription" S'+
    ' left outer join ('+
    '   select P.feed_id, count(*) as UnreadCount from "Post" P inner join "UserPost" X on X.post_id=P.id where X.user_id=$1 group by P.feed_id'+
    ' ) X on X.feed_id=S.feed_id'+
    ' inner join "Feed" F on F.id=S.feed_id'+
    ' where S.user_id=$1'
    //+' order by S.category, S.label, F.name, S.id'
    ,[Session.UserID]);
  try
    <<script>
    function f(id,x1,x2,x3){
      var x=document.getElementById("pc"+id);
      x.textContent=x1+"/"+x2;
      x.title="posts="+x2+" unread="+x1+" opened="+x3;
    }
    [[
    while qr.Read do
      Context.SendHTML(Format('f(%d,%d,%d,%d);'#13#10,[qr.GetInt('id'),qr.GetInt('UnreadCount'),qr.GetInt('PostCount'),qr.GetInt('postsopened')]));
    <</script>>
  finally
    qr.Free;
  end;

 end
else
 begin
  
  qr:=TQueryResult.Create(Session.Connection,
    'select S.*, F.name, F.url from "Subscription" S'+
    ' inner join "Feed" F on F.id=S.feed_id'+
    ' where S.id=$1',[id]);
  try
    <<form method="post" action="Feed.xxm">
    <input type="hidden" name="x" value="1" />
    <input type="hidden" name="id" value="[[=id]]" />
    <dl>
    <dt>name</dt>
    <dd>>.name<</dd>
    <dt>URL</dt>
    <dd>>.url]]&nbsp;<a href="[[.url]]" style="text-decoration:none;"><img src="img_r.png" width="16" height="16" alt="feed link" /></a></dd>
    <dt>since</dt>
    <dd>>=FormatDateTime('yyyy-mm-dd hh:nn',double(qr['created'])+Session.TimeBias)<</dd>>
    category:=qr.GetStr('category');
    feedlabel:=qr.GetStr('label');
    readwidth:=VarToStr(qr['readwidth']);
    autounread:=qr['autounread'];
    feedcolor:=qr.GetStr('color');
    feedid:=qr.GetInt('feed_id');
  finally
    qr.Free;
  end;
  <<dt>category</dt>
  <dd>
    <select name="category">>
    qr:=TQueryResult.Create(Session.Connection,
      'select distinct category, lower(category) as SortBy from "Subscription" where user_id=$1 order by lower(category)',
      [Session.UserID]);
    try
      while qr.Read do
        begin
        <<option[[
        if category=qr.GetStr(0) then Context.SendHTML(' selected="1"');
        ]]>>=qr[0]<</option>>
        end;
    finally
      qr.Free;
    end;
    <<option value="---" style="color:#006600;">&rarr; new category</option>
    </select>
    <input type="text" name="categoryNew" />
  </dd>
  <dt>label text</dt>
  <dd><input type="text" name="label" value="[[=feedlabel]]" autocomplete="off" /></dd>
  <dt>label color</dt>
  <dd>>#ColorPicker(feedcolor)<</dd>
  <dt>read width</dt>
  <dd><input type="text" name="readwidth" value="[[=readwidth]]" style="width:4em;" /> M-width</dd>
  <dt>auto-unread after</dt>
  <dd>>
  ur0:=0;//default
  ur1:=1;//default: days
  if not VarIsNull(autounread) then
   begin
    ur0:=autounread;
    if (ur0 mod 24)=0 then
      if (ur0 mod (7*24))=0 then
       begin
        ur0:=ur0 div (7*24);
        ur1:=2;//weeks
       end
      else
       begin
        ur0:=ur0 div 24;
        ur1:=1;//days
       end
    else
      ur1:=0;//hours
   end;
  <<input type="text" name="autounread0" value="[[if not VarIsNull(autounread) then Context.Send(ur0);]]" style="width:4em;" />
  <select name="autounread1">
  <option value="0"[[#osel[ur1=0]]]>hours</option>
  <option value="1"[[#osel[ur1=1]]]>days</option>
  <option value="2"[[#osel[ur1=2]]]>weeks</option>
  </select>
  </dd>
  </dl>
  <p><input type="submit" value="Update" /></p>
  </form>
  <p><a href=".?f=[[=feedid]]">view posts from this feed...</a></p>
  <form method="post" action="Feed.xxm" onsubmit="return confirm('Are you sure to unsubscribe from this feed?');">
  <input type="hidden" name="x" value="2" />
  <input type="hidden" name="id" value="[[=id]]" />
  <p style="border:2px solid red;"><input type="submit" value="Remove feed..." /></p>
  </form>
  <p><a href="?">back...</a></p>>

 end;
    
Context.Include('dFoot.xxmi');
