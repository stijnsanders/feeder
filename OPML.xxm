[[@Classes,ActiveX,Variants,MSXML2_TLB,DataLank,xxmSession,fCommon]][[!var
m:TStreamAdapter;
d:DOMDocument60;
db:TDataConnection;

const
DefaultReadWidth=32;

procedure DoOutlines(xl:IXMLDOMNodeList;const Group:string);
var
  x:IXMLDOMElement;
  s,t,feedcolor,autounread:string;
  qr:TQueryResult;
  id,id1,rw,ur0:integer;
  ur:Variant;
begin
  x:=xl.nextNode as IXMLDOMElement;
  while x<>nil do
   begin
    s:=VarToStr(x.getAttribute('xmlUrl'));
    if s<>'' then
     begin
      Context.SendHTML('<p>'+HTMLEncode(s)+' ('+Group+')</p>');
      Context.Flush;

      db:=Session.Connection;

      //feed exists?
      t:=VarToStr(x.getAttribute('f:label'));
      qr:=TQueryResult.Create(db,'select id, name from "Feed" where url=$1',[s]);
      try
        if qr.EOF then id:=0 else
         begin
          id:=qr.GetInt(0);
          if t='' then t:=qr.GetStr(1);
         end;
      finally
        qr.Free;
      end;
      if id=0 then
       begin
        //nope, add it
        if t='' then t:=NameFromFeedURL(s);
        id:=db.Insert('Feed',['name',t,'url',s,'created',double(UtcNow)],'id');
        id1:=0;
       end
      else
       begin
        //already subscribed?
        qr:=TQueryResult.Create(db,'select id from "Subscription" where user_id=$1 and feed_id=$2',[Session.UserID,id]);
        try
          if qr.EOF then id1:=0 else id1:=qr.GetInt(0);
        finally
          qr.Free;
        end;
        //if not, mark recent posts as unread
        if id1=0 then
          db.Execute('insert into "UserPost" (user_id,post_id,suscription_id,pubdate) select $1,P.id,S.id,P.pubdate'
            +' from "Post"'
            +' inner join "Subscription" S on S.feed_id=P.feed_id and S.user_id=$1'
            +' where P.feed_id=$2 and P.pubDate>$3',
            [Session.UserID,id,double(UtcNow-366.0)]);
       end;
    
      feedcolor:=VarToStr(x.getAttribute('f:color'));
      if not TryStrToInt(VarToStr(x.getAttribute('f:readwidth')),rw) then
        rw:=DefaultReadWidth;
      autounread:=VarToStr(x.getAttribute('f:autounread'));
      if autounread='' then ur:=Null else
        if TryStrToInt(autounread,ur0) then ur0:=ur else ur:=Null;

      if id1=0 then
       begin
        //add subscription
        db.Insert('Subscription',
          ['user_id',Session.UserID
          ,'feed_id',id
          ,'label',t
          ,'color',feedcolor
          ,'category',Group
          ,'readwidth',rw
          ,'autounread',ur
          ,'created',double(UtcNow)
          ],'id');
       end
      else
       begin
        //update category? (allow duplicates?)
       end;

     end;

    s:=VarToStr(x.getAttribute('title'));
    if s='' then s:=Group else if Group<>'' then s:=Group+'\'+s;
    DoOutlines(x.selectNodes('outline'),s);
    DoOutlines(x.selectNodes('opml:outline'),s);
    x:=xl.nextNode as IXMLDOMElement;
   end;
end;

]][[
Context.Include('dHead.xxmi');

case Context['x'].AsInteger of
  0:
   begin
    <ul>
    <li><a href="?x=1">import...</a></li>
    <li><a href="?x=2">export...</a></li>
    </ul>
    <p><a href=".">back</a></p>
   end;
  1://import
   begin
    <form method="post" action="?" enctype="multipart/form-data">
    <input type="hidden" name="x" value="3" />
    <dl>
    <dt>OPML file:</dt>
    <dd><input type="file" name="f" /></dd>
    <dt>Prefix categories with:</dt>
    <dd><input type="text" name="c" /></dd>
    </dl>
    <p><input type="submit" value=" Upload " /></p>
    </form>
    <p><a href="?">back</a></p>
   end;
  2://export
   begin
    <<p><a href="OPML1.xxm">Click here do download your personal "subscriptions.opml"</p>>
    <<p><a href="Feeds.xxm">back</a></p>>
   end;
  3://import upload
   begin
    m:=TStreamAdapter.Create(TMemoryStream.Create,soOwned);
    try
      (m as IUnknown)._AddRef;
      (Context['f'] as IxxmParameterPostFile).SaveToStream(m);
      m.Stream.Position:=0;
      d:=CoDOMDocument60.Create;
      d.async:=false;
      d.validateOnParse:=false;
      d.resolveExternals:=false;
      if not d.load(m as IStream) then
        raise Exception.Create(d.parseError.reason);

      d.setProperty('SelectionNamespaces','xmlns:opml=''http://opml.org/spec2'' xmlns:f=''http://yoy.be/schema/2018/feeder_subs''');
      
      db:=Session.Connection;
      db.BeginTrans;
      try
        DoOutlines(d.documentElement.selectNodes('body/outline'),Context['c'].Value);
        DoOutlines(d.documentElement.selectNodes('opml:body/opml:outline'),Context['c'].Value);

        db.CommitTrans;
      except
        db.RollbackTrans;
        raise;
      end;

    finally
      d:=nil;
      //m.Free;
      (m as IUnknown)._Release;
    end;
    <<p><a href="Feeds.xxm">continue...</a></p>>
   end;
  else
    raise Exception.Create('Unknown action');
end;

Context.Include('dFoot.xxmi');